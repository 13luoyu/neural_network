

# 一些物体检测算法： R-CNN，SSD，YOLO

# RCNN是最早，最有名的一类使用锚框和CNN的目标检测算法
# R-CNN（区域卷积神经网络），使用启发式搜索算法来选择锚框，
# 使用预训练模型来对每个锚框抽取特征，（然后进入ROI池化层）
# 训练一个SVM（支持向量机）对类别分类，
# 训练一个线性回归模型来预测锚框和边缘框偏移
# 锚框 -> CNN -> 类别预测和边界框预测

# Fast RCNN，当锚框多时，对每个锚框进行抽取特征，计算量大
# 改为使用CNN对整张图片抽取特征，此时得到一个特征图（比原图小）
# 在原图上的锚框，映射到特征图上的对应位置，然后输入池化层。
# 这样，只需要进行一次CNN，更快。
# 一个问题是因为每个锚框大小不同，如何将它们合成一个批量（大小必须相同）进入全连接层
# 使用兴趣区域（RoI）池化层，给定一个锚框，将其分割成n*m块，输出每块最大值
# 如果不能均匀分割，就缩减，比如锚框3*3，池化块2*2，
# 则分为2*2，1*2，2*1，1*1
# 这样不管锚框多大，总是输出n*m

# Faster RCNN，使用一个区域提议网络RPN来替换启发式搜索，获得更好的锚框
# CNN的结果，除了输出到池化层，还输出到一个网络，
# 这个网络首先是卷积层，然后生成许多锚框，锚框经过而分类预测与边界框预测
# 进行筛选，最后使用NMS过滤，结果为更好的锚框，输出到池化层。
# 业内相较，Faster RCNN的特点是预测精度高，代价是慢

# Mask RCNN，如果有像素级别的编号，使用FCN来利用这些信息
# 池化层的输出，还要输入到FCN中，其结果输出到Mask预测中
# 在这里，像素也可以被分割，所以ROI池化层中完全均匀分割


# SSD单发多框检测
# 生成锚框：对每个像素，生成n+m-1个锚框
# 将图片输入到一个基础网络来抽取特征，然后输入多个卷积层减半宽高
# 在每个层，输出都会生成锚框，进行种类预测和边界框预测，因为锚框
# 差不多大，所以底部层来拟合小物体，顶部层拟合大物体，

# SSD通过单神经网络来检测模型（因此比双网络的Faster RCNN快），
# 以每个像素为中心产生多个锚框，在多个段的输出上进行多尺度的检测
# SSD更快，但精度不如RCNN


# SSD中锚框大量重叠，浪费了很多计算，YOLO将图片均匀分成S*S个锚框，
# 每个锚框预测B个边缘（因为锚框可能框到了多个物体）和其分类置信度

#Faster RCNN拥有较高的准确率，YOLO速度较快，而SSD算法的运行速度
# 要比YOLO要快，同时准确率却能和Faster RCNN相媲美。
# 这里的快指的是FPS/sec



















